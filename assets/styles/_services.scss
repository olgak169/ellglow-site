@import 'variables';

.hero_pattern-1 {
  background-image: url('~/assets/img/backgrounds/pattern-4-3--001.svg?inline');
  background-size: cover;
  background-position: center center;
  background-repeat: repeat;
}
.hero_pattern-3 {
  background-image: url('~/assets/img/backgrounds/pattern-4-3--003.svg?inline');
  background-size: cover;
  background-position: center center;
  background-repeat: repeat;
}
.hero_services {
  --flex-gap: 1.25rem;
  max-width: 90%;
  margin: 3rem auto;
  padding: var(--space-xl);
  border-radius: $b_rad_large;
  border: 1px solid var(--clr-primary-80);
  background: radial-gradient(130% 90% at 20% 20%, #f8e1ff 0%, #ff97ba 100%);

  @include breaks(large) {
    width: 50rem;
  }
}

.btn-up {
  position: fixed;
  bottom: 3em;
  right: 4rem;
  height: 5em;
  width: 5em;
  border-radius: 50%;
  border: none;
  background-color: var(--clr-primary-70);
  color: var(--clr-white);
  z-index: 4;
}
.services_container {
  max-width: 60ch;
  display: grid;
  grid-template-columns: 1fr;
  align-items: center;
  gap: var(--space-s);
  margin: var(--space-l) auto;
  @include breaks(large) {
    max-width: 100%;
    grid-auto-rows: auto;
    gap: 0;
  }
}

.service_block {
  max-width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  .service_description {
    max-width: 31.25rem;
    padding: var(--space-m);
  }
  .service_img {
    max-width: 100%;
    display: grid;
    place-items: center;
    border-radius: $b_rad_large;
    border: var(--clr-accent-90) 1px solid;
    overflow: hidden;
    img {
      width: 100%;
      max-width: 31.25rem;
    }
  }
  ul {
    --flow-space: var(--space-2xs);
    list-style: none;
    li::before {
      content: '\2606';
      margin-right: 0.3em;
    }
  }
  .service_details {
    font-size: 0.9rem;
  }
  .service_links {
    --flex-gap: var(--space-l);
    padding-left: 1rem;
    a {
      text-transform: uppercase;
      font-size: var(--step-0);
      position: relative;
      isolation: isolate;
      &:hover::before {
        background-color: var(--clr-secondary-70);
        left: 50%;
      }
      &::before {
        content: '';
        position: absolute;
        left: -0.04em;
        top: 50%;
        transform: translate(-50%, -50%);
        display: block;
        width: 2em;
        height: 2em;
        border-radius: 50%;
        background-color: var(--clr-secondary-90);
        transition: background-color 0.4s ease-out,
          left 0.5s cubic-bezier(0.24, 1.08, 0.9, 1.48);
        z-index: -1;
      }
    }
  }

  @include breaks(large) {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-auto-flow: dense;
    align-items: center;
    justify-content: center;
    margin: 0;

    &:nth-of-type(odd) {
      .service_img {
        background-color: var(--clr-accent-90);
      }
    }
    &:nth-of-type(4n + 1) {
      .service_img {
        background-color: var(--clr-secondary-90);
      }
    }
    &:nth-child(2n + 2) > div:first-child {
      grid-column: 2;
    }
    &:nth-child(2n + 2),
    &:nth-child(4n + 2) {
      .service_img {
        background-color: transparent;
        background-position: center center;
        background-size: contain;
        background-repeat: no-repeat;
      }
    }
    &:nth-child(2n + 2) {
      .service_description {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        padding: var(--space-m) var(--space-m) 0 0;
      }
      .service_description-other {
        padding: var(--space-l) var(--space-m);
      }
      .service_img {
        background-image: url('~/assets/img/backgrounds/pattern-square--001.svg?inline');
      }
    }
    &:nth-child(4n + 2) {
      .service_img {
        background-image: url('~/assets/img/backgrounds/pattern-square--002.svg?inline');
      }
    }
    .service_img {
      border-color: transparent;
      height: 100%;
      img {
        max-width: 90%;
        border-radius: $b_rad_large;
        box-shadow: $shadow-primary;
      }
    }
    .service_description {
      padding: var(--space-m) 0 0 var(--space-m);
    }
    .service_description-other {
      padding: var(--space-l) var(--space-m);
    }
  }
}
.service_block {
  .addon_block {
    display: flex;
    flex-direction: column;
    gap: var(--space-s);
    @include breaks(large) {
      padding: var(--space-2xs) var(--space-m);
      & > * {
        flex: 1;
      }
      .addon_content {
        padding: var(--space-s) 0;
        p {
          max-width: 50ch;
        }
      }
    }
  }
}
